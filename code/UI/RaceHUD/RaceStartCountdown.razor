@using Sandbox;
@using Sandbox.UI;
@attribute [Alias("RaceStart")]
@namespace Bydrive
@inherits PanelComponent

@if(!ShowCountdown())
{
	playedCountdown = false;
	return;
}

@{
	string countdown = GetCountdown();
	if(!string.IsNullOrEmpty(countdown))
	{
		if (!playedCountdown)
		{
			GameSound.Play(SOUND_COUNTDOWN, GameSoundChannel.Effect);
			playedCountdown = true;
		}
	}
}

<root>
	<div class="title">@countdown</div>
</root>

@code
{
	const string SOUND_COUNTDOWN = "/sounds/effects/countdown.sound";
	const float DEFAULT_START_TEXT_FADE = 2f;
	const float DEFAULT_COUNTDOWN_TIME = 3f;
	bool playedCountdown;

	[Property] public float StartTextFade { get; set; } = DEFAULT_START_TEXT_FADE;
	[Property] public float CountdownTime { get; set; } = DEFAULT_COUNTDOWN_TIME;

	public bool ShowCountdown()
	{
		return Race != null && Race.HasLoaded && Race.TimeUntilRaceStart.Relative > -StartTextFade;
	}

	private string GetCountdown()
	{
		float countdown = Race.TimeUntilRaceStart.Relative;

		if (countdown > CountdownTime) return "";
		else if (countdown > 0) return $"{MathF.Ceiling(countdown)}";
		else return "GO!";
	}
	protected override int BuildHash() => System.HashCode.Combine( Race?.HasStarted, Race?.TimeUntilRaceStart.Relative );
}