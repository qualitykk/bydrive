@using Sandbox.UI;
@using System.Collections.Generic;
@inherits PanelComponent
@namespace Bydrive

@if (!ShouldDraw())
	return;

@{
	UI.HideRaceHud();
}
<root>
	<div class="title">Results</div>
	<div class="list">
		@if(Race.IsTimeTrial)
		{
			@foreach (var result in GetPlacements())
			{
				<div class="times entry">
					<div class="racer">
						<label class="name">@result.Participant.DisplayName</label>
						<label class="time">@result.Time.FormatAsRaceTime()</label>
					</div>
					<div class="laps">
						@for (int i = 0; i < result.LapTimes.Count; i++)
						{
							<div class="row">
								<label class="number">Lap @(i+1)</label>
								<label class="time">@result.LapTimes[i].FormatAsRaceTime()</label>
							</div>
						}
					</div>
				</div>
			}
			
			@if(GetPreviousData() != null && GetPreviousData().Any())
			{
				<label class="header">Previous Times</label>
				@for(int i = 0; i < MathF.Min(GetPreviousData().Count,5); i++)
				{
					@{
						TimeTrialRecording entry = GetPreviousData().OrderBy(p => p.TotalTime).ElementAt(i);
					}
					<div class="racer entry" style="height: 6vh;">
						<label class="placement @GetPlacementTag(i+1)">@(i + 1)</label>
						<label class="name @GetPlacementTag(i+1)">@(new Friend(entry.SteamId).Name)</label>
						<label class="time">@entry.TotalTime.FormatAsRaceTime()</label>
					</div>
				}
			}
		}
		else if(finished && showScores)
		{
			@foreach (var kv in scores.OrderBy(kv => totalPlacement.IndexOf(kv)))
			{
				@{
					int placement = totalPlacement.IndexOf(kv) + 1;
					RaceInformation.Participant participant = kv.Key;
					int score = kv.Value;
					int oldScore = oldScores.ContainsKey(participant) ? oldScores[participant] : 0;
				}
				<div class="entry racer">
					<label class="placement @GetPlacementTag(placement)">@placement</label>
					<label class="name @GetPlacementTag(placement)">participant.Player.DisplayName</label>
					<div class="score">
						<label class="added">
							@($"+{score - oldScore}")
						</label>
						<label class="value">
							@score
						</label>
					</div>
				</div>
			}
		}
		else if (GetPlacements() != null)
		{
			@foreach (var result in GetPlacements())
			{
				<div class="entry racer">
					<label class="placement @GetPlacementTag(result.Placement)">@result.Placement</label>
					<label class="name">@result.Participant.DisplayName</label>
					<label class="time">@result.Time.FormatAsRaceTime()</label>
				</div>
			}
		}
		
	</div>
	<div class="footer">
		<div class="button" @onclick=@OnClickNext>@GetNextLabel()</div>
		@if (Race.IsTimeTrial)
		{
			<div class="button" @onclick=@OnClickRestart>Restart</div>
		}
	</div>
</root>